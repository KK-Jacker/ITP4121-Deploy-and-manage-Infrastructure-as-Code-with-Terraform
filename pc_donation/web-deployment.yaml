apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.24.0 (4a2a0458)
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: web
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.24.0 (4a2a0458)
      creationTimestamp: null
      labels:
        io.kompose.service: web
    spec:
      imagePullSecrets:
      - name: azurecr-secret
      containers:
        - env:
            - name: AZURE_CLIENT_ID
              value: ${AZURE_CLIENT_ID}
            - name: AZURE_CLIENT_SECRET
              value: ${AZURE_CLIENT_SECRET}
            - name: AZURE_TENANT_ID
              value: ${AZURE_TENANT_ID}
            - name: DATABASE_HOST
              value: mysql
            - name: DB_HOST
              value: ${DB_HOST}
              #valueFrom:
                #secretKeyRef:
                  #key: web-secret
                  #name: DB_host
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: web-secret
                  key: DB_NAME
            - name: DB_PASS
              value: ${DB_PASS}
              #valueFrom:
                #secretKeyRef:
                  #key: web-secret
                  #name: DB_PASS
            - name: DB_USER
              value: ${DB_USER}
              #valueFrom:
                #secretKeyRef:
                  #key: web-secret
                  #name: DB_USER
            - name: FLASK_ENV
              value: development
            - name: MAIL_SERVER
              value: smtp4dev
            - name: NGINX_PORT
              value: "8080"
            - name: VAULT_URL
              value: ${VAULT_URL}
          image: ${IMAGE}
          name: web
          ports:
            - containerPort: 80
          resources: {}
      restartPolicy: Always
status: {}

# envsubst < web-deployment.yaml | kubectl apply -f - && kubectl apply 0f web-service.yaml
# kubectl create secret docker-registry acr-secret --namespace=default --docker-server=itp4121projectdev.azurecr.io --docker-username=itp4121projectdev --docker-password=${ACR_PASS} --