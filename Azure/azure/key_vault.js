"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KeyVaultConstruct = void 0;
const constructs_1 = require("constructs");
const provider_azurerm_1 = require("@cdktf/provider-azurerm");
class KeyVaultConstruct extends constructs_1.Construct {
    constructor(scope, name, props) {
        super(scope, name);
        const dataAzureRmClientConfig = new provider_azurerm_1.DataAzurermClientConfig(this, "Client Config");
        const { resourceGroup, storageAccount, servicePrincipalObjectId } = props;
        this.keyVault = new provider_azurerm_1.KeyVault(this, "ITP4121-Project Key Vault", {
            name: process.env.PROJECT_NAME + process.env.ENV,
            location: resourceGroup.location,
            resourceGroupName: resourceGroup.name,
            skuName: "standard",
            tenantId: dataAzureRmClientConfig.tenantId,
            accessPolicy: [{
                    tenantId: dataAzureRmClientConfig.tenantId,
                    objectId: dataAzureRmClientConfig.objectId,
                    secretPermissions: ["set", "get", "delete", "purge", "recover", "list"]
                }, {
                    tenantId: dataAzureRmClientConfig.tenantId,
                    objectId: servicePrincipalObjectId,
                    secretPermissions: ["set", "get", "delete", "purge", "recover", "list"]
                }
            ],
        });
        new provider_azurerm_1.KeyVaultSecret(this, "Storage Account Name", {
            keyVaultId: this.keyVault.id, name: "StorageAccountName", value: storageAccount.name
        });
        new provider_azurerm_1.KeyVaultSecret(this, "Storage Connection String", {
            keyVaultId: this.keyVault.id,
            name: "StorageConnectionString",
            value: storageAccount.primaryConnectionString
        });
        new provider_azurerm_1.KeyVaultSecret(this, "Storage Account Key", {
            keyVaultId: this.keyVault.id, name: "StorageAccountKey", value: storageAccount.primaryAccessKey
        });
        new provider_azurerm_1.KeyVaultSecret(this, "Application Insights Key", {
            keyVaultId: this.keyVault.id, name: "ApplicationInsightsKey", value: props.applicationInsightsKey
        });
        new provider_azurerm_1.KeyVaultSecret(this, "Google Map Key", {
            keyVaultId: this.keyVault.id, name: "GoogleMapKey", value: process.env.GOOGLE_MAP_KEY
        });
        new provider_azurerm_1.KeyVaultSecret(this, "Recaptcha Secret Key", {
            keyVaultId: this.keyVault.id, name: "RecaptchaSecretKey", value: process.env.RECAPTCHA_SECRET_KEY
        });
        new provider_azurerm_1.KeyVaultSecret(this, "Recaptcha Site Key", {
            keyVaultId: this.keyVault.id, name: "RecaptchaSiteKey", value: process.env.RECAPTCHA_SITE_KEY
        });
        new provider_azurerm_1.KeyVaultSecret(this, "Cognitive Account Computer Vision Key", {
            keyVaultId: this.keyVault.id,
            name: "CognitiveAccountComputerVisionKey",
            value: props.cognitiveServiceConstruct.cognitiveAccountComputerVisionKey
        });
        new provider_azurerm_1.KeyVaultSecret(this, "Cognitive Account Computer Vision Endpoint", {
            keyVaultId: this.keyVault.id,
            name: "CognitiveAccountComputerVisionEndpoint",
            value: props.cognitiveServiceConstruct.cognitiveAccountComputerVisionEndpoint
        });
        new provider_azurerm_1.KeyVaultSecret(this, "Cognitive Account Content Moderator Key", {
            keyVaultId: this.keyVault.id,
            name: "CognitiveAccountContentModeratorKey",
            value: props.cognitiveServiceConstruct.cognitiveAccountContentModeratorKey
        });
        new provider_azurerm_1.KeyVaultSecret(this, "Cognitive Account Content Moderator Endpoint", {
            keyVaultId: this.keyVault.id,
            name: "CognitiveAccountContentModeratorEndpoint",
            value: props.cognitiveServiceConstruct.cognitiveAccountContentModeratorEndpoint
        });
        new provider_azurerm_1.KeyVaultSecret(this, "Cognitive Account Text Analytics Key", {
            keyVaultId: this.keyVault.id,
            name: "CognitiveAccountTextAnalyticsKey",
            value: props.cognitiveServiceConstruct.cognitiveAccountTextAnalyticsKey
        });
        new provider_azurerm_1.KeyVaultSecret(this, "Cognitive Account Text Analytics Endpoint", {
            keyVaultId: this.keyVault.id,
            name: "CognitiveAccountTextAnalyticsEndpoint",
            value: props.cognitiveServiceConstruct.cognitiveAccountTextAnalyticsEndpoint
        });
        new provider_azurerm_1.KeyVaultSecret(this, "Cognitive Account Text Translation Key", {
            keyVaultId: this.keyVault.id,
            name: "CognitiveAccountTextTranslationKey",
            value: props.cognitiveServiceConstruct.cognitiveAccountTextTranslationKey
        });
        new provider_azurerm_1.KeyVaultSecret(this, "Cognitive Account Text Translation Endpoint", {
            keyVaultId: this.keyVault.id,
            name: "CognitiveAccountTextTranslationEndpoint",
            value: props.cognitiveServiceConstruct.cognitiveAccountTextTranslationEndpoint
        });
        new provider_azurerm_1.KeyVaultSecret(this, "Cognitive Account Face Key", {
            keyVaultId: this.keyVault.id,
            name: "CognitiveAccountFaceKey",
            value: props.cognitiveServiceConstruct.cognitiveAccountFaceKey
        });
        new provider_azurerm_1.KeyVaultSecret(this, "Cognitive Account Face Endpoint", {
            keyVaultId: this.keyVault.id,
            name: "CognitiveAccountFaceEndpoint",
            value: props.cognitiveServiceConstruct.cognitiveAccountFaceEndpoint
        });
        new provider_azurerm_1.KeyVaultSecret(this, "Cognitive Account FormRecognizer Key", {
            keyVaultId: this.keyVault.id,
            name: "CognitiveAccountFormRecognizerKey",
            value: props.cognitiveServiceConstruct.cognitiveAccountFormRecognizerKey
        });
        new provider_azurerm_1.KeyVaultSecret(this, "Cognitive Account FormRecognizer Endpoint", {
            keyVaultId: this.keyVault.id,
            name: "CognitiveAccountFormRecognizerEndpoint",
            value: props.cognitiveServiceConstruct.cognitiveAccountFormRecognizerEndpoint
        });
        new provider_azurerm_1.KeyVaultSecret(this, "Web Chat Bot Secret", {
            keyVaultId: this.keyVault.id,
            name: "WebChatBotSecret",
            value: props.webChatBotSecret
        });
    }
}
exports.KeyVaultConstruct = KeyVaultConstruct;
//# sourceMappingURL=data:application/json;base64,